const { sentences, poems, words } = { "sentences": ["您像一支蜡烛，有一分热，发一分光，照亮了别人，耗尽了自己。", "这无私的奉献，令人永志不忘。", "您用火一般的情感温暖着每一个同学的心房.", "无数颗心被您牵引激荡。", "连您的背影也凝聚着滚烫的目光……", "您用心中全部的爱，染成了我青春的色彩!", "您用执著的信念，铸成了我性格的不屈……", "老师，我生命的火花里闪耀着一个您！", "如果没有您思想的滋润，怎么会绽开那么多美好的灵魂之花啊!", "老师，人类灵魂的工程师，有谁不在将您赞扬！", "是谁把雨露撒遍大地？是谁把幼苗辛勤哺育？是您，老师!", "您是一位伟大的园丁！", "看这遍地怒放的鲜花，哪一朵上没有您的心血，哪一朵上没有您的笑影！", "我不是您最出色的学生，而您却是我最尊敬的老师。", "在您的节日里，我要把一份崇高的敬意献给您。", "您为花的盛开，果的成熟忙碌着，默默地垂着叶的绿荫！", "啊，老师，您的精神，永记我心！", "您像一支红烛，为后辈献出了所有的热和光！", "您的品格和精神，可以用两个字就是－－燃烧！不停的燃烧！", "我崇拜伟人、名人，可是我更急切地把我的敬意和赞美献给一位普通的人――我的老师您。", "信念之火在校园里焚烧着愚昧和无知。", "岁月证实您的耕耘是神圣的。", "您拥有春天，拥有阳光，拥有花朵；", "在永恒的歌声中，成为果实！", "您是园丁，为祖国山川添秀色；", "您如春雨，润育桃李，神州大地尽芳菲。", "您推崇真诚和廉洁，以此视作为人处世的准则。", "您是我们莘莘学子心目中的楷模。", "萤火虫的可贵，在于用那盏挂在后尾的灯，专照别人；您的可敬，则在于总是给别人提供方便。", "用语言播种，用彩笔耕耘，用汗水浇灌，用心血滋润。", "这就是我们敬爱的老师崇高的劳动。", "您工作在今朝，却建设着祖国的明天；您教学在课堂，成就却在祖国的四面八方。", "您是大桥，为我们连接被割断的山峦，让我们走向收获的峰巅；您是青藤，坚韧而修长，指引我们采撷到崖顶的灵芝和人参。", "在我的心目中，您是最严厉的父亲，又是最慈祥的妈妈", "您是无名英雄，又是教坛名师。", "这一切，汇成了一曲最雄浑、最优美、最壮丽、最动听的乐章。这是在有5000年文明史的国度里、在阳光普照的960万平方公里的土地上、在13亿根心弦上的奏鸣，怎么能不激昂奔越，怎么能不高亢雄浑，怎么能不起伏跌宕，怎么能不缤纷绚丽呢……", "您给了我们一杆生活的尺，让我们自己天天去丈量；", "您给了我们一面模范行为的镜子，让我们处处有学习的榜样。", "您多像那默默无闻的树根，使小树茁壮成长，又使树枝上挂满丰硕的果实，却并不要求任何报酬。", "呵，老师，校园里有着您的骄傲和光荣。", "在您呕心沥血的浇灌下，有着太多的丰收季节。您忠贞不渝地守护这块园地，就像守护着您的阳光照在您的脸上，那是一片明朗的希望。", "加减乘除，算不尽您作出的奉献！", "诗词歌赋，颂不完对您的崇敬！", "您用知识甘露，浇开我们理想的花朵；", "您用心灵清泉，润育我们情操的美果。", "在这不寻常的节日里，献上我们深深的祝福！", "老师，您是美的耕耘者，美的播种者。", "是您用美的阳光普照，用美的雨露滋润，我们的心田才绿草如茵，繁花似锦！", "老师，大家都说您培养着祖国的栋梁；", "我却要说，您就是祖国的栋梁。", "在这喜庆的节日里，让我献上一支心灵的鲜花，向您表达衷心的祝愿。", "正是您，支撑起我们一代人的脊梁！", "刻在木板上的名字未必不朽，刻在石头上的名字也未必流芳百世；", "老师，您的名字刻在我们心灵上，这才真正永存。", "敬爱的老师，您的谆谆教诲如春风，似瑞雨，永铭我心。", "我虔诚地祝福您：康乐、如意！", "教师是火种，点燃了学生的心灵之火；", "教师是石级，承受着学生一步步踏实地向上攀登。", "假如我是诗人，我将以满腔的热情写下诗篇，赞美大海的辽阔和深远。", "并把它献给您－－我的胸怀博大，知识精深的老师。", "老师，您用人类最崇高的感情－－爱，播种春天，播种理想，播种力量……", "老师，如果把您比作蚌，那末学生便是蚌里的砂粒；您用爱去舐它，磨它，浸它，洗它……经年累月，砂粒便成了一颗颗珍珠，光彩熠熠。", "您晶莹，是人类灵魂的雕塑大师和巨匠；", "您诚挚，毫无自私之心地默默奉献青春，在讲坛上愿作一滴滋润参天大树根基的水珠；", "您无畏，历经磨难却依然顽强不息地开拓前进，为整个中华民族的振兴而奋斗；", "您奋进，站在时代的潮头之上，呼唤着一个灿烂的未来……", "您的爱，太阳一般温暖，春风一般和煦，清泉一般甘甜。", "您的爱，比父爱更严峻，比母爱更细腻，比友爱更纯洁。", "您－－老师的爱，天下最伟大，最高洁。", "您不是演员，却吸引着我们饥渴的目光；", "您不是歌唱家，却让知识的清泉叮咚作响，唱出迷人的歌曲；", "您不是雕塑家，却塑造着一批批青年人的灵魂……", "老师啊，我怎能把您遗忘!", "鸟儿遇到风雨，躲进它的巢里;我心上有风雨袭来，总是躲在您的怀里--我的师长，您是我遮雨的伞，挡风的墙，我怎能不感谢您！", "您最清楚“为人师表”的份量。", "清贫与寂寞，鲜花与赞美，都淡然迎送，心灵坦荡，如无际的原野。", "桃园的芬芳最为惬意，园丁的心花更是美丽。低下头，耕耘的泥土清又香；", "挺起胸，鲜红的太阳笑盈盈。", "您在校园里辛勤地耕耘。", "您早已把心种了下去，在年复一年的期待中，看着您的诗句从校园里长出，在人们的嘴中被吟诵成果实。", "不计辛勤一砚寒，桃熟流丹，李熟技残，种花容易树人难。", "幽谷飞香不一般，诗满人间，画满人间，英才济济笑开颜。", "传播知识，就是播种希望，播种幸福。", "老师，您就是这希望与幸福的播种人！", "春蚕一生没说过自诩的话，那吐出的银丝就是丈量生命价值的尺子。", "敬爱的老师，您从未在别人面前炫耀过，但那盛开的桃李，就是对您最高的评价。", "您的思想，您的话语，充溢着诗意，蕴含着哲理，又显得那么神奇――呵，在我的脑海里，它们曾激起过多少美妙的涟漪！", "您的教师生涯，有无数骄傲和幸福的回忆，但您把它们珍藏在心底，而只是注视着一待开拓的园地。", "呵，老师，您抱定了牛的形象，一耕耘便是几十个春秋，即使两鬓斑白，也老秋枫叶色最红。于是，您把春蚕的精神汲取，让祖国披上美丽的织锦。您心底无私天地宽。", "当苗儿需要一杯水的时候，绝不送上一桶水；而当需要一桶水的时候，也绝不给予一杯水。适时，适量地给予，这是一个好园丁的技艺。我的老师，这也正是您的教育艺术。", "您对我们严格要求，并以自己的行动为榜样。", "您的规劝、要求，甚至命令，一经提出，便要我们一定做到，然而又总使我们心悦诚服，自觉行动。", "这就是您留在我心中的高大形象。", "啊，有了您，花园才这般艳丽，大地才充满春意！", "老师，快推开窗子看吧，这满园春色，这满园桃李，都在向您敬礼！", "呵，这便是颠扑不灭万古流芳的园丁魂！"], "poems": ["三人行，必有我师焉。择其善者而从之，其不善者而改之。", "落红不是无情物，化作春泥更护花。", "桃李不言，下自成蹊。", "温故而知新，可以为师矣。", "春蚕到死丝方尽，蜡炬成灰泪始干。", "随风潜入夜，润物细无声。", "师者，所以传道受业解惑也。", "令公桃李满天下，何用堂前更种花。", "一日为师，终身为父。", "古之学者必有师。", "圣人无常师。", "鹤发银丝映日月，丹心热血沃新花。", "经师易遇，人师难遭，愿在左右，供给洒扫。", "天子号仁圣，任贤如事师。", "乃知古学者，尊师复重友。", "我拜师门更南去，荔枝春熟向渝泸。", "闻道谿阴山水好，师行一一遍经过。 ", "北虏坏亭障，闻屯千里师。", "君之师友何，殆不止韩柳。", "明年再有新生者，十丈龙孙绕凤池。", "蹇蹇三事，师师百僚。", "偶应非熊兆，尊为帝者师。", "为道常日损，尊师修此心。", "东宫白庶子，南寺远禅师。", "古之学者必严其师，师严然后道尊，道尊然后笃敬。", "师住稽亭高处寺，斜廊曲阁倚云开。", "绿野堂开占物华，路人指道令公家。", "自闻颖师弹，起坐在一旁。", "山下禅庵老师在，愿将形役问空王。", "老归江上寺，不忘旧师恩。", "灵师不挂怀，冒涉道转延。", "忽遇文殊开慧眼，他年应记老师心。", "多谢师尊传演教，要令后学悟真诠。", "新竹高于旧竹枝，全凭老干为扶持。", "丹心事国忠无二，白首尊师谊在三。", "王师未报收东郡，城阙秋生画角哀。", "古之学者为己，今之学者为人。", "是故弟子不必不如师，师不必贤于弟子。", "王子停凤管，师襄掩瑶琴。", "摇落深知宋玉悲，风流儒雅亦吾师。", "灵师皇甫姓，胤胄本蝉联。"], "words": ["百年树人", "百世之师", "春风化雨", "聪明过人", "德才兼备", "德高望重", "耳提面命", "废寝忘食", "和蔼可亲", "后继有人", "诲人不倦", "良师益友", "教导有方", "教无常师", "尽心尽力", "兢兢业业", "鞠躬尽瘁", "恪尽职守", "良工心苦", "良师益友", "良师诤友", "埋头苦干", "门墙桃李", "默默无闻", "能者为师", "呕心沥血", "披星戴月", "潜移默化", "勤勤恳恳", "青出于蓝", "润物无声", "师道尊严", "师恩似海", "十年树木", "桃李芬芳", "桃李满门", "桃李天下", "桃李争妍", "为人师表", "文思敏捷", "无私奉献", "无微不至", "先圣先师", "辛勤劳碌", "循循善诱", "言传身教", "研桑心计", "一鸣惊人", "一丝不苟", "一字之师", "因材施教", "有教无类", "谆谆教导", "孜孜不倦"] }

const keywords = ["老师", "教师", "您"]
const keywordsSentences = keywords.map(function (word) {
  return sentences.filter(s => s.includes(word))
})
const otherSentences = sentences.filter(s => !keywords.some(w => s.includes(w)));
function rIntTo(i) {
  return Math.floor(Math.random() * i)
}
function rSelect(arr) {
  return arr[rIntTo(arr.length)]
}
function generate() {
  const keywordIndex = rIntTo(keywords.length)
  const keyword = keywords[keywordIndex]
  /** @type {string} */
  const targetArr = keywordsSentences[keywordIndex]
  const firstSentences = rSelect(targetArr);
  const sentencesSelected = [firstSentences];
  const targetLength = rIntTo(40) + 30;
  let poem = ""
  let wordFormat = rSelect(["$是您，", "您是$的，", "您是如此的$，", "$您的代言词，"]);
  let action = 0 // 下一步动作
  while (action !== 4) {
    switch (action) {
      case 0:
        poem += firstSentences
        break
      case 1:
        {
          // try to find the similar sentence:
          const keyPlace = firstSentences.indexOf(keyword);
          if (!targetArr.some(str => {
            if ((!sentencesSelected.includes(str)) && str.indexOf(keyword) === keyPlace) {
              poem += str;
              sentencesSelected.push(str);
              return true
            }
          })) {
            poem += rSelect(targetArr);
          }
        }
        break
      case 2:
        poem += wordFormat.replace("$", rSelect(words));
        break
      case 3:
        poem += rSelect(otherSentences);
        break
      case 5:
        poem += "“" + rSelect(poems) + "”";
        break
    }
    action = actionNext(action);
    // console.log(action)
  }
  return poem.replace(/((?:。”)|(?:[。，！…；]+))/g, "$1\n");
}
function actionNext(action) {
  switch (action) {
    case 0:
      {
        const n = rIntTo(2)
        if (n === 0) return 1
        else if (n === 1) return 5
      }
    case 1:
      {
        const n = rIntTo(2)
        if (n === 0) return 1
        else if (n === 1) return 2
      }
    case 2:
      {
        const n = rIntTo(3)
        if (n === 1) return 2
        else if (n == 2) return 3
        else return 4
      }
    case 5:
      return 2;
    case 3:
    default:
      return 4;
  }
}
console.log(generate())